* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
  padding: 2rem;
}
ul {
  list-style-type: none;
  background-color: antiquewhite;
  /* padding: 1rem; */
  height: 12rem;

  display: flex;

  /*? Yazilari hizalamak icin */
  text-align: center;

  /*? gap, flex icerisindeki elemanlarin dikey ve yatay bosluklarini belirlemek icin kullanilabilir.
  //*? ilk yazilan yatay (satilar arasi) bosluk, 2. yazilan ise dikey (sutunlar arasi) bosluktur */
  gap: 1rem 2rem;

  /*! Elemanların dizilis yonu : column, row, row-reverse, column-reverse*/
  /* flex-direction: row;
  
  /*? sikistirma veya alt satira gecebilme:flex-wrap: wrap, nowrap, wrap-reverse*/
  /* flex-wrap: wrap; */

  flex-flow: row wrap;

  /*! Yatay Hizalama: justify-content
  /** flex-start, flex-end,center, space-around,space-evenly, space-between*/
  justify-content: center;

  /*! Dikey Hizalama => align-items
  /**  flex-start, flex-end,center, stretch,baseline */
  align-items: center;

  /*! Çok satırlı verilerin dikeyde hizalanması için kullanılır. wrap açık olmalı ve container height öğelerden daha uzun olmalı. */
  align-content: center;
}

ul li {
  background-color: tomato;
  width: 6rem;
  padding: 0.5rem;
  color: white;
}

/* ************** FLEX ITEMS (flex-grow flex-basis  **************** */

.container {
  background-color: cadetblue;
  padding: 1rem;
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
  text-align: center;
  font-size: 1.5rem;
}
.container * {
  background-color: thistle;
}

.container header {
  flex-basis: 100%;

  /*? Alternatif olarak */
  /*! flex uc deger alabilir => flex-grow,  flex-shrink, flex-basis */
  flex: 1 1 100%; /*?  flex-grow: 1,  flex-shrink:1 ve flex-basis: 100%; */
  /*? Yani buyume katsayisi 1 kat, kuculme katsayi 1 kat*/
  /*? flex-basis 100% oldugu icin tum satiri kapsar */

  flex: 1 100%;
  /** Flex 2 degerli de yazilabilir. Bu durumda:
 /** İlk deger flex-grow 2.si ise flex-basis degeri olur.*/
}
.container .left {
  flex-grow: 2;

  /*! Birimsiz tek deger varsa bu flex-grow degeri olur.
  /*! Bu durumda flex-basis 0' a esittir */
  /*? flex-grow: 2,   flex-basis:0 */
  flex: 2; /** left digerlerine gore 2 kat daha fazla buyuyebilir.*/
}
.container main {
  flex-grow: 3;

  /*? flex-grow: 3,   flex-basis:0 */
  flex: 3; /** main digerlerine gore 3 kat daha fazla buyuyebilir.*/
}
.container .right {
  flex-grow: 2;

  /*? flex-grow: 1,   flex-basis:0 */
  /*? border-right-color: ; 1 kat buyur */
}
.container footer {
  flex-basis: 100%;

  /*? Birimli tek bir deger varsa bu flex-basis olcusudur (width/height) */
  flex: 100%;
}

/* ************** ALTERNATIVE WAY  **************** */

.container1 {
  background-color:peru;
  padding: 1rem;
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
  text-align: center;
  font-size: 1.5rem;
}
.container1 * {
  background-color:yellowgreen;
}

.container1 header {
  width: 100%;
}
.container1 .left {
  width: 25%;
  width: calc(25% - calc(2rem/3));
}
.container1 main {
  width: 50%;
  width: calc(50% - calc(2rem/3));
}
.container1 .right {
  width: 25%;
  width: calc(25% - calc(2rem/3));
}
.container1 footer {
  width: 100%;
}